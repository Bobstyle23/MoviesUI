{"ast":null,"code":"var _jsxFileName = \"/Users/mukhammadboburpakhriyev/Desktop/MoviesUI/src/components/loginForm.jsx\";\nimport React, { Component } from \"react\";\nimport Input from \"./common/input\";\nimport Joi from \"joi-browser\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      account: {\n        userName: \"\",\n        password: \"\"\n      },\n      errors: {}\n    };\n    this.schema = {\n      userName: Joi.string().required(),\n      password: Joi.string().required()\n    };\n\n    this.validate = () => {\n      const result = Joi.validate(this.state.account, this.schema, {\n        abortEarly: false\n      });\n      if (!result.error) return null;\n      const errors = {};\n\n      for (let item of result.error.details) errors[items.path[0]] = item.message;\n\n      console.log(result);\n    };\n\n    this.validateProperty = ({\n      name,\n      value\n    }) => {\n      if (name === \"userName\") {\n        if (value.trim() === \"\") return \"Username is required!\";\n      }\n\n      if (name === \"password\") {\n        if (value.trim() === \"\") return \"Password is required!\";\n      }\n    };\n\n    this.handleSubmit = e => {\n      e.preventDefault();\n      const errors = this.validate();\n      this.setState({\n        errors: errors || {}\n      });\n      if (errors) return;\n    };\n\n    this.handleInput = ({\n      currentTarget: input\n    }) => {\n      const errors = { ...this.state.errors\n      };\n      const errorMessage = this.validateProperty(input);\n      if (errorMessage) errors[input.name] = errorMessage;else delete errors[input.name];\n      const account = { ...this.state.account\n      };\n      account[input.name] = input.value;\n      this.setState({\n        account,\n        errors\n      });\n    };\n  }\n\n  render() {\n    const {\n      account,\n      errors\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: this.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Input, {\n          name: \"userName\",\n          value: account.userName,\n          label: \"Username\",\n          onChange: this.handleInput,\n          type: \"text\",\n          error: errors.userName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          name: \"password\",\n          value: account.password,\n          label: \"Password\",\n          onChange: this.handleInput,\n          type: \"password\",\n          error: errors.password\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary mt-2\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/mukhammadboburpakhriyev/Desktop/MoviesUI/src/components/loginForm.jsx"],"names":["React","Component","Input","Joi","LoginForm","state","account","userName","password","errors","schema","string","required","validate","result","abortEarly","error","item","details","items","path","message","console","log","validateProperty","name","value","trim","handleSubmit","e","preventDefault","setState","handleInput","currentTarget","input","errorMessage","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Input from \"./common/input\";\nimport Joi from \"joi-browser\";\n\nclass LoginForm extends Component {\n  state = {\n    account: { userName: \"\", password: \"\" },\n    errors: {},\n  };\n\n  schema = {\n    userName: Joi.string().required(),\n    password: Joi.string().required(),\n  };\n\n  validate = () => {\n    const result = Joi.validate(this.state.account, this.schema, {\n      abortEarly: false,\n    });\n    if (!result.error) return null;\n    const errors = {};\n    for (let item of result.error.details) errors[items.path[0]] = item.message;\n    console.log(result);\n  };\n\n  validateProperty = ({ name, value }) => {\n    if (name === \"userName\") {\n      if (value.trim() === \"\") return \"Username is required!\";\n    }\n    if (name === \"password\") {\n      if (value.trim() === \"\") return \"Password is required!\";\n    }\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    const errors = this.validate();\n    this.setState({ errors: errors || {} });\n    if (errors) return;\n  };\n\n  handleInput = ({ currentTarget: input }) => {\n    const errors = { ...this.state.errors };\n    const errorMessage = this.validateProperty(input);\n    if (errorMessage) errors[input.name] = errorMessage;\n    else delete errors[input.name];\n    const account = { ...this.state.account };\n    account[input.name] = input.value;\n    this.setState({ account, errors });\n  };\n\n  render() {\n    const { account, errors } = this.state;\n    return (\n      <div>\n        <h1>Login</h1>\n        <form onSubmit={this.handleSubmit}>\n          <Input\n            name=\"userName\"\n            value={account.userName}\n            label=\"Username\"\n            onChange={this.handleInput}\n            type=\"text\"\n            error={errors.userName}\n          />\n\n          <Input\n            name=\"password\"\n            value={account.password}\n            label=\"Password\"\n            onChange={this.handleInput}\n            type=\"password\"\n            error={errors.password}\n          />\n\n          <button className=\"btn btn-primary mt-2\">Login</button>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}