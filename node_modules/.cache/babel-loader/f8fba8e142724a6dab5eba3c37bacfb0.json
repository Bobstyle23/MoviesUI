{"ast":null,"code":"var _jsxFileName = \"/Users/mukhammadboburpakhriyev/Desktop/MoviesUI/src/components/movies.jsx\";\nimport React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport MovieIcon from \"@material-ui/icons/Movie\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"./utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport MoviesTable from \"./moviesTable\";\nimport { NavLink } from \"react-router-dom\";\nimport _ from \"lodash\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Movies extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      movies: [],\n      pageSize: 4,\n      currentPage: 1,\n      genres: [],\n      sortColumn: {\n        path: \"title\",\n        order: \"asc\"\n      }\n    };\n\n    this.handleDelete = movie => {\n      const movies = this.state.movies.filter(m => m._id !== movie._id);\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleLike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].liked = !movies[index].liked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleDislike = movie => {\n      const movies = [...this.state.movies];\n      const index = movies.indexOf(movie);\n      movies[index] = { ...movies[index]\n      };\n      movies[index].disliked = !movies[index].disliked;\n      this.setState({\n        movies\n      });\n    };\n\n    this.handleOnPageChange = page => {\n      this.setState({\n        currentPage: page\n      });\n    };\n\n    this.handleGenreSelect = genre => {\n      this.setState({\n        selectedGenre: genre,\n        currentPage: 1\n      });\n    };\n\n    this.handleSort = sortColumn => {\n      this.setState({\n        sortColumn\n      });\n    };\n  }\n\n  componentDidMount() {\n    const genres = [{\n      _id: \"\",\n      name: \"All Genres\"\n    }, ...getGenres()];\n    this.setState({\n      movies: getMovies(),\n      genres\n    });\n  }\n\n  render() {\n    const {\n      length: count\n    } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      movies: allMovies\n    } = this.state;\n    if (count === 0) return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"There are no \", /*#__PURE__*/_jsxDEV(MovieIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 24\n      }, this), \" movies in the database!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this);\n    const filtered = selectedGenre && selectedGenre._id ? allMovies.filter(m => m.genre._id === selectedGenre._id) : allMovies;\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-2\",\n        children: /*#__PURE__*/_jsxDEV(ListGroup, {\n          items: this.state.genres,\n          selectedItem: this.state.selectedGenre,\n          onItemSelect: this.handleGenreSelect\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-primary\",\n          children: \"Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Showing \", filtered.length, \" \", /*#__PURE__*/_jsxDEV(MovieIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 39\n          }, this), \" movies in the database!\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MoviesTable, {\n          movies: movies,\n          sortColumn: sortColumn,\n          onLike: this.handleLike,\n          onDelete: this.handleDelete,\n          onDislike: this.handleDislike,\n          onSort: this.handleSort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n          itemsCount: filtered.length,\n          pageSize: pageSize,\n          currentPage: currentPage,\n          onPageChange: this.handleOnPageChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Movies;","map":{"version":3,"sources":["/Users/mukhammadboburpakhriyev/Desktop/MoviesUI/src/components/movies.jsx"],"names":["React","Component","getMovies","MovieIcon","Pagination","paginate","ListGroup","getGenres","MoviesTable","NavLink","_","Movies","state","movies","pageSize","currentPage","genres","sortColumn","path","order","handleDelete","movie","filter","m","_id","setState","handleLike","index","indexOf","liked","handleDislike","disliked","handleOnPageChange","page","handleGenreSelect","genre","selectedGenre","handleSort","componentDidMount","name","render","length","count","allMovies","filtered","sorted","orderBy"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { getMovies } from \"../services/fakeMovieService\";\nimport MovieIcon from \"@material-ui/icons/Movie\";\nimport Pagination from \"./common/pagination\";\nimport { paginate } from \"./utils/paginate\";\nimport ListGroup from \"./common/listGroup\";\nimport { getGenres } from \"../services/fakeGenreService\";\nimport MoviesTable from \"./moviesTable\";\nimport { NavLink } from \"react-router-dom\";\nimport _ from \"lodash\";\n\nclass Movies extends Component {\n  state = {\n    movies: [],\n    pageSize: 4,\n    currentPage: 1,\n    genres: [],\n    sortColumn: { path: \"title\", order: \"asc\" },\n  };\n\n  componentDidMount() {\n    const genres = [{ _id: \"\", name: \"All Genres\" }, ...getGenres()];\n    this.setState({ movies: getMovies(), genres });\n  }\n\n  handleDelete = (movie) => {\n    const movies = this.state.movies.filter((m) => m._id !== movie._id);\n    this.setState({ movies });\n  };\n\n  handleLike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].liked = !movies[index].liked;\n    this.setState({ movies });\n  };\n\n  handleDislike = (movie) => {\n    const movies = [...this.state.movies];\n    const index = movies.indexOf(movie);\n    movies[index] = { ...movies[index] };\n    movies[index].disliked = !movies[index].disliked;\n    this.setState({ movies });\n  };\n\n  handleOnPageChange = (page) => {\n    this.setState({ currentPage: page });\n  };\n\n  handleGenreSelect = (genre) => {\n    this.setState({ selectedGenre: genre, currentPage: 1 });\n  };\n\n  handleSort = (sortColumn) => {\n    this.setState({ sortColumn });\n  };\n  render() {\n    const { length: count } = this.state.movies;\n    const {\n      pageSize,\n      currentPage,\n      sortColumn,\n      selectedGenre,\n      movies: allMovies,\n    } = this.state;\n    if (count === 0)\n      return (\n        <p>\n          There are no <MovieIcon /> movies in the database!\n        </p>\n      );\n\n    const filtered =\n      selectedGenre && selectedGenre._id\n        ? allMovies.filter((m) => m.genre._id === selectedGenre._id)\n        : allMovies;\n\n    const sorted = _.orderBy(filtered, [sortColumn.path], [sortColumn.order]);\n\n    const movies = paginate(sorted, currentPage, pageSize);\n\n    return (\n      <div className=\"row\">\n        <div className=\"col-2\">\n          <ListGroup\n            items={this.state.genres}\n            selectedItem={this.state.selectedGenre}\n            onItemSelect={this.handleGenreSelect}\n          />\n        </div>\n        <div className=\"col\">\n          <button className=\"btn btn-primary\">Movie</button>\n          <p>\n            Showing {filtered.length} <MovieIcon /> movies in the database!\n          </p>\n\n          <MoviesTable\n            movies={movies}\n            sortColumn={sortColumn}\n            onLike={this.handleLike}\n            onDelete={this.handleDelete}\n            onDislike={this.handleDislike}\n            onSort={this.handleSort}\n          />\n\n          <Pagination\n            itemsCount={filtered.length}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            onPageChange={this.handleOnPageChange}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Movies;\n"]},"metadata":{},"sourceType":"module"}